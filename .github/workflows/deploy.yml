name: Deploy AWS Lambda

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    # Cache Node.js dependencies
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # Install dependencies
    - name: Install dependencies
      run: npm ci

    # Run ESLint to check code quality
    - name: Lint code
      run: npm run lint

    # Build the project using esbuild
    - name: Build project
      run: npm run build

    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Package the application using SAM
    - name: Package SAM application
      run: |
        sam build --use-container
        sam package --output-template-file packaged.yaml --s3-bucket ${{ secrets.S3_BUCKET }}

    # Deploy the application using SAM
    - name: Deploy SAM application
      run: |
        sam deploy --template-file packaged.yaml --stack-name my-sam-stack \
        --capabilities CAPABILITY_IAM \
        --region us-east-1 \
        --no-fail-on-empty-changeset

    # Post-deployment verification
    - name: Verify deployment
      run: |
        aws cloudformation describe-stacks --stack-name my-sam-stack
